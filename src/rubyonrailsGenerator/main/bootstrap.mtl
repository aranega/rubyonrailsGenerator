[comment encoding = UTF-8 /]
[module bootstrap('http://www.eclipse.org/uml2/4.0.0/UML')]

[template public generateProject(model : Model)]
[comment @main/]
[comment Create a Rakefile that generate the whole project /]
[file ('scripts/' + model.name.toLowerCase() + '/Rakefile', false, 'UTF-8')]

namespace :app do 
	
	desc "Creating the rails project directory"
	task :setup do 
		APP_DIR = "[model.name.toLowerCase() /]".gsub(" ", "_")
		Dir.mkdir(APP_DIR, 0755) unless Dir.exist?(APP_DIR)
		sh "cd #{APP_DIR}"
		sh "rails new ."
	end	
	
	desc "Generating migrations for models"
	task :gen_models => :setup do 
		[model.generateMigrationsForModel() /]
	end
	
	task :gen_migrations => :gen_models do 
		sh "rake db:migrate"
	end	

end

task :default => "app:gen_migrations"
[/file]
[/template]


[comment Create the command line for every Class within the model /]

[template private generateMigrationsForModel (model : Model) ]
[for (c : Class | model.packagedElement->filter("Class"))]
[c.generateCommandForClass() /]
[/for]
[/template]


[comment Create the command line for a given class
		 ex: rails g scaffold User firstname:string lastname:string /]

[template private generateCommandForClass (c : Class) ]
sh "rails g scaffold [c.name.toUpperFirst() /] [generateCommandParamsFroClass(c) /]"
[/template]


[comment Create the command line options for a given class
		 ex: firstname:string lastname:string /]

[template private generateCommandParamsFroClass(c : Class)]
[for (attr : Property | c.attribute) separator (' ')] [attr.name.toLowerCase()/]:[attr.type.name.toLowerCase() /][/for]
[/template]